# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2af5d1af-29d4-40e1-a8af-162bc0291ba6'
  imageRepository: 'akhildotnet'
  containerRegistry: 'myregistry.azurecr.io'  # Replace 'myregistry' with your actual Azure Container Registry name
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'mypvtrepo17562003-auth'

  # Agent VM image name
  pool:
    name: Akhil-DevOps-Pipeline

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: $(pool)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: 'buildAndPush'
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              tags: |
                $(tag)

          - upload: manifests
            artifact: manifests

  - stage: Deploy_TO_Stage
    displayName: Deploy to Stage
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          name: $(pool)
        environment: 'AKHIL1399dotnet-1899.mynamespace'  # Replace with your AKS namespace for staging

        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: 'createSecret'
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment.yml
                      $(Pipeline.Workspace)/manifests/service.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)

  - stage: Deploy_TO_Prod
    displayName: Deploy to Production
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          name: $(pool)
        environment: 'AKHIL1399dotnet-1899.mynamespace'  # Replace with your AKS namespace for production

        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: 'createSecret'
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment.yml
                      $(Pipeline.Workspace)/manifests/service.yml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)
